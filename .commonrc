UNAME=$(uname)

source $HOME/.commonfuncs

alias h=history
# what freakin' linux is this?
alias what_linux="cat /etc/issue"

# source my .zshrc
alias zRehash='source ~/.zshrc'
# switch over to the simple prompt
alias sp='source ~/.zshprompt_simple'
# re link all the conf files
alias qs='$HOME/.dotfiles/create_links.sh'

# prefer vim over vi
if checkPath vim; then
    alias vi=vim
else
    # keep me honest
    alias vim=vi
fi

# shortcut for long descrip checking
alias py_long_descrip="python2.4 setup.py --long-description"
# use cat to show the file
alias descrip_check="py_long_descrip > /tmp/package.rst; rst2html.py /tmp/package.rst /tmp/package.html; cat -n /tmp/package.rst"

# some OS X specific stuff
if [[ $UNAME == "Darwin" ]]; then

    # set up a path in .profile for TextMate (zsh haterz)
    # NOTE: this will overwrite the .profile
    echo "export PATH=$PATH" > $HOME/.profile

    if checkPath mysql5; then
        # I have mysql5 installed with MacPorts, which adds the 5
        alias mysql='mysql5'
    fi
    
    # open it up in TextMate instead of cat
    alias descrip_check="py_long_descrip > /tmp/package.rst; rst2html.py /tmp/package.rst /tmp/package.html; mate /tmp/package.rst"
    # run the setup.py descrip through docutils, then open it with Firefox (Minefield)
    alias descrip_check_open="py_long_descrip | rst2html.py > /tmp/foo.html; open file:///tmp/foo.html"

    # pylons buildout madness
    alias pfg='bin/paster serve --reload src/sixieminutes/development.ini'

    # mysql
    alias mysqlwrapper="sudo /opt/local/etc/LaunchDaemons/org.macports.mysql5/mysql5.wrapper"

    # iPhone doesn't have a defaults command...yet
    if checkPath defaults; then
        # also set up the osx path
        # (this will overwrite the PATH everytime we open a shell)
        defaults write $HOME/.MacOSX/environment PATH -string $PATH
    fi
    
    # add ports into the $MANPATH
    export MANPATH=/opt/local/man:$MANPATH
fi

# grepping (or acking)
# sgrep stands for super grep, meaning recursive and case insensitive
if checkPath ack; then
    alias grep=ack
    alias sgrep=ack
else
    # using the GNU grep trunk with the exclude dir opt
    #alias grep='grep -EIn --exclude-dir=".svn" --exclude-dir="CVS" --exclude=".DS_STORE" --exclude="*pyc" --color=always'
    alias grep='grep -EIn --exclude=".DS_STORE" --exclude="*pyc" --color=always'
    alias ack=grep
    alias sgrep='grep -ir'
    alias sgrepnoi='grep -r'
    alias sgrepnor='grep -i'
    alias sgrepnoir='grep'
fi

## processes
alias psa='ps axwww'
# pipe into grep to find a proc
alias psg='psa | sgrep'
# search for python procs
alias ispy='psg "[p]ython"'
# search for ruby procs
alias isrb='psg "[r]uby"'

# supervisor in buildouts
alias bsctl=bin/supervisorctl
# system wide supervisor
if checkPath supervisorctl; then
    alias sctl=supervisorctl
fi

alias lsofp="sudo lsof -p"

# find aliases
alias delpyc="find . -name '*.pyc' -delete"
alias brokensymlinks="find -L . -type l"

# pypi shortcuts (need to look into setup.py aliases)
alias sdist_upload="python2.4 setup.py mregister sdist mupload -r skillet"
alias sdist_upload_pypi="python2.4 setup.py mregister sdist mupload -r pypi"

# svn helpers
alias svnps="svn propset svn:externals -F EXTERNALS.txt ."
alias svnpsi="svn propset svn:ignore -F IGNORE.txt ."
alias svndiff="svn --dif-cmd=colordif"
# Needs to be a better way to do this... (global aliases + zsh, see the .zshrc)
export sfuprivate='https://svn.sixfeetup.com/svn/private'
export sfupublic='https://svn.sixfeetup.com/svn/public'

# zope shortcuts based on our old zeo/zss setup
# this was before buildout :)
alias zRunzope='zss/bin/zeoctl start;zeo/bin/zopectl fg'
alias zStart='zss/bin/zeoctl start;zeo/bin/zopectl start'
alias zStop='zeo/bin/zopectl stop;zss/bin/zeoctl stop'
alias zCtl='zeo/bin/zopectl'
alias z1Ctl='zss/bin/zeoctl'

# zope runs most QA/Staging instances...
alias zu='sudo -H -u zope'

# buildout...
alias bfg='bin/control fg || bin/instance fg'
alias bfgs='bin/supervisord && bin/instance fg'
alias bss='bin/supervisorctl shutdown'
alias bs='bin/control stop || bin/instance stop'
alias bbn='bin/buildout -v'
alias bbN='bin/buildout -Nv'
alias bbnew="python2.4 bootstrap.py && bbn -N"
alias bbk='bbn -U'
alias bbkd='bbk -c development.cfg'
alias bbpin="bin/buildout -Nvvvvv plonesite:enabled=false | sed -ne 's/^Picked: //p' | sort | uniq"
alias bbc="rm -rf parts develop-eggs fake-eggs .installed.cfg"
alias bbcwipe="bbc var/filestorage/Data.fs*"
alias bbrefresh="bs; rm .installed.cfg var/filestorage/Data.fs*; bbn -N"
alias bbcextreme="bbc ~/.buildout/eggs/* ~/.buildout/downloads/* ~/.buildout/zope/*"

# I have a folder of custom made fortunes...
if checkPath fortune && [ -d /opt/local/share/games/fortune/comedy ]; then
    alias laugh='echo; fortune comedy ;echo'
fi

# make cp and move ask before replacing files
alias cp='cp -iv'
alias mv='mv -i'

# conditionally set up coloring on different OS types
if [ $UNAME = "FreeBSD" ] || [ $UNAME = "Darwin" ]; then
   alias ls="ls -GF"
elif [ $UNAME = "Linux" ]; then
   alias ls="ls --color=auto -F"
elif [ $UNAME = 'SunOS' ]; then
   alias ls="ls --color=always -F"
fi

# show me all files (long list)
alias ll='ls -al'
# show me everything human readable
alias lsa='ll -h'
# sort by size
alias lss='lsa -Sr'
# sort by date modified
alias lsdate='lsa -tr'
# don't list directories
alias lsd='lsa -d'
# list all dot files
alias lsdot='lsd .*'

alias df='df -h'
alias less='less -I'

# tar aliases.  ignore OS X meta files
# NOTE: on OS X tar is freaked out by resource forks.  see .zshenv for the fix.
alias targzc='tar --exclude=".DS_Store" --exclude="*pyc" -zcvf'
alias tarbzc='tar --exclude=".DS_Store" --exclude="*pyc" -jcvf'
alias targzx='tar -zxvf'
alias tarbzx='tar -xvjf'
# 7zip
alias 7zultra='7za a -t7z -m0=lzma -mx=9 -mfb=64 -md=32m -ms=on'

# always show all versions of an executable
alias which="which -a"

# ssh over a slow connection
alias sshc="ssh -C -c blowfish"

## ArchLinux / Linux desktop stuff

# use powerpill if available
if checkPath powerpill; then
    alias pacinstall="sudo powerpill -S"
else
    alias pacinstall="sudo pacman -S"
fi

if checkPath yaourt; then
   alias pacsearch="yaourt -Ss"
else
   alias pacsearch="pacman -Ss"
fi

# use gnome-open if it is available
if checkPath gnome-open; then
    # can't break the OS X habit :)
    alias open=gnome-open
fi

# Pretty LS_COLORS explanation: 
# http://www.mjxg.com/index.py/geek/lscolors_and_ls_colors
export LS_COLORS="no=00:fi=00:di=32:ln=36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=01;05;37;41:mi=01;05;37;41:ex=31:*.cmd=01;32:*.exe=01;32:*.com=01;32:*.btm=01;32:*.bat=01;32:*.sh=01;32:*.csh=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tz=01;31:*.rpm=01;31:*.cpio=01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.xbm=01;35:*.xpm=01;35:*.png=01;35:*.tif=01;35:"

# if the virutalenv wrapper is available, then source it
if checkPath virtualenvwrapper_bashrc && [ -d $HOME/.virtualenvs ]; then
    source virtualenvwrapper_bashrc
fi

# source a file that has some git config changes. One is the
# .gitignore file setup since that doesn't know how to use
# ~ or $HOME. The other is my github token, which I don't want
# to check in.
if checkPath git && [[ -a "$HOME/.githack" ]]; then
    source "$HOME/.githack"
fi
